---
import { FavoriteButton } from "../../components/button/favoriteButton/FavoriteButton";
import Footer from "../../components/navigation/Footer.astro";
import TalkLayout from "../../layouts/Layout.astro";
import {
  getDisciplineColorPair,
  getDisciplineName,
} from "../../utils/discipline";
import { getTalkById } from "../../utils/schedule";

const exampleDescription =
  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
const exampleSpeakerDescription =
  "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo";

const { talk: talkId } = Astro.params;

if (talkId === undefined) {
  return Astro.redirect("/404");
}

const talk = getTalkById(talkId);

if (talk === undefined) {
  return Astro.redirect("/404");
}

const { id, title, location, from, to, discipline, speaker } = talk;

const colorPair = getDisciplineColorPair(discipline);

const disciplineBackgroundColor = colorPair.color;
const disciplineTextColor = colorPair.textColor;
---

<TalkLayout>
  <a class="talk__schedule_link" href="/schedule">
    <span class="talk__left_arrow">â†“</span>
    <span class="talk__talk__link_text">Full schedule</span>
  </a>
  <div class="talk__main">
    <section>
      <h1>
        {title}
      </h1>
      <div class="talk__talk_section">
        <div class="talk__talk_details">
          <p class="talk__chip talk__time_and_location">
            {`${location} ${from}-${to}`}
          </p>
          <p class="talk__chip talk__discipline">
            {getDisciplineName(discipline)}
          </p>
          <FavoriteButton id={id} title={title} />
        </div>
        <p>
          {exampleDescription}
        </p>
      </div>
      <div class="talk__author_section">
        <div class="talk__author_images">
          <img
            src="/assets/img/divider/smiley.png"
            class="talk__author_image"
            alt="Temporary image of author(s)"
          />
          <p>Temporary image of author(s)</p>
        </div>
        <div class="talk__author_description">
          <p class="talk__author_title">{speaker}</p>
          <p>{exampleSpeakerDescription}</p>
        </div>
      </div>
    </section>
  </div>
  <Footer variant="black" illustrationVariant={discipline} slot="footer" />
</TalkLayout>

<style define:vars={{ disciplineBackgroundColor, disciplineTextColor }}>
  .talk__main {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--Padding-xl);
  }

  section {
    display: flex;
    flex-direction: column;
    gap: var(--Padding-xl);
    max-width: 870px;
  }

  h1 {
    font-size: var(--Font-size-H2);
  }

  .talk__left_arrow {
    transform: rotate(90deg);
    font-size: 3.2rem;
    font-weight: 600;
  }

  .talk__schedule_link {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1.5rem;
    width: fit-content;
  }

  .talk__talk__link_text {
    font-size: var(--Font-size-H3);
  }

  .talk__talk_details {
    display: flex;
    align-items: center;
    gap: var(--Padding-l);
  }

  .talk__talk_section {
    display: flex;
    flex-direction: column;
    gap: var(--Padding-l);
    width: 650px;
  }

  p {
    font-size: var(--Font-size-Body-Big);
    line-height: var(--Line-height-Body-Big);
    font-weight: 300;
  }

  .talk__chip {
    font-size: var(--Font-size-H4);
    font-weight: 450;
    line-height: var(--Line-height-H4);
    border-radius: 2.5rem;
    padding: var(--Padding-xs) var(--Padding-s);
    border-radius: 2rem;
  }

  .talk__time_and_location {
    border: 1px solid var(--text-primary);
  }

  .talk__discipline {
    background: var(--disciplineBackgroundColor);
    color: var(--disciplineTextColor);
  }

  .talk__author_section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--Padding-m);
    width: 650px;
  }

  .talk__author_images {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--Padding-rem);
    p {
      font-size: var(--Font-size-H5);
      color: var(--grey-900);
    }
  }

  .talk__author_image {
    height: 408.284px;
    width: 316.5px;
    overflow: hidden;
    object-fit: contain;
    border-radius: 0.8rem;
    border: 1px dotted var(--grey-800);
  }

  .talk__author_description {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .talk__author_title {
    font-size: var(--Font-size-H3);
  }
</style>
