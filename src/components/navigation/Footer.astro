---
import { Image } from "astro:assets";
import designCurly from "../../../public/assets/img/curly_design.png";
import developmentCurly from "../../../public/assets/img/curly_development.png";
import strategyAndProductCurly from "../../../public/assets/img/curly_strategy_and_product.png";
import logoVariant from "../../../public/assets/img/logo-variant.svg";
import { Discipline } from "../../utils/discipline";

interface Props {
  variant: "red" | "black";
  illustrationVariant?: Discipline;
}

const { variant = "red", illustrationVariant } = Astro.props;

function getCurlyIllustration(discipline: Discipline) {
  switch (discipline) {
    case Discipline.Design:
      return designCurly;
    case Discipline.Development:
      return developmentCurly;
    case Discipline.StrategyAndProduct:
      return strategyAndProductCurly;
  }
}

const backgroundClass = variant === "red" ? "footer__red" : "footer__black";

const offices = [
  "Trondheim",
  "Oslo",
  "Bergen",
  "Stavanger",
  "Stockholm",
  "Gothenburg",
  "Linköping",
];
---

<footer class={`footer ${backgroundClass}`}>
  {
    illustrationVariant && (
      <Image
        src={getCurlyIllustration(illustrationVariant)}
        class="footer__curly"
        alt="Refill illustration"
      />
    )
  }

  <div class="footer__content">
    <div class="footer__office">
      <p>
        We have multiple offices in Norway and Sweden. Feel free to drop by for
        a cup of coffee or just a friendly chat.
      </p>
      <div class="footer__offices">
        {
          offices.map((office) => {
            return <p>{office}</p>;
          })
        }
      </div>
    </div>
    <div class="footer__contact">
      <p>General contact</p>
      <a href="mailto:refill@variant.se">refill@variant.se</a>
    </div>
  </div>
  <Image class="footer__img" src={logoVariant} alt="Variant logo" />
</footer>

<style>
  .footer {
    box-sizing: border-box;
    padding: var(--Padding-l);
    border-radius: var(--Padding-s);
    max-width: 1410px;
    width: 100%;
    margin: auto;

    container: footer / inline-size;

    display: flex;
    flex-direction: column;
    gap: 7.5rem;
    position: relative;

    @media (max-width: 1000px) {
      padding: 2.25rem;
      gap: 2rem;
    }
    @media (max-width: 530px) {
      padding: 1.5rem;
      padding-bottom: 2.25rem;
    }

    & p {
      font-size: 1.125rem;
      font-weight: 400;
    }
  }

  .footer__red {
    background: linear-gradient(180deg, #ffc2be 0%, #ef826e 45%, #e45738 100%);

    p {
      color: var(--text-primary);
    }

    a {
      color: var(--grey-800);
    }
  }

  .footer__black {
    background: var(--background-dark);

    p {
      color: var(--text-primary-on-dark);
    }

    a {
      color: var(--grey-50);
    }
  }

  .footer__curly {
    width: 572px;
    object-fit: contain;
    position: absolute;
    right: calc(-1 * var(--Padding-index));
    top: -206px;

    @container footer (width >= 1300px) {
      right: 0;
    }

    @media (max-width: 1100px) {
      width: 400px;
      top: -230px;
    }

    @media (max-width: 800px) {
      display: none;
    }
  }

  .footer__content {
    display: flex;
    flex-direction: column;
    gap: var(--Padding-l);

    @media (max-width: 1000px) {
      gap: 2.25rem;
    }
  }
  .footer__office {
    display: flex;
    flex-direction: column;
    gap: var(--Padding-m);

    & > p {
      max-width: 353px;
    }
  }

  .footer__offices {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;

    & > p {
      display: flex;
      gap: 0.5rem;
    }

    & > p:not(:last-child)::after {
      content: "·";
      color: var(--text-disabled);
    }
  }

  .footer__contact {
    display: flex;
    flex-direction: column;
    gap: var(--Padding-m);
  }

  .footer__img {
    width: 100%;
    height: auto;
  }
</style>
