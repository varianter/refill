---
import {
  type TalkDescription,
  type TalkDescriptionList,
} from "../../utils/schedule/types";
interface Props {
  talkDescription: TalkDescriptionList;
  span: number;
}

const { span, talkDescription } = Astro.props;

function shouldShowDescription() {
  return span > 1 && talkDescription.length > 0;
}

function isParagraph(descriptionParagraph: TalkDescription) {
  return typeof descriptionParagraph === "string";
}
---

{
  shouldShowDescription() && (
    <div class="description">
      {talkDescription.map((descriptionParagraph) => {
        if (isParagraph(descriptionParagraph)) {
          return <p>{descriptionParagraph}</p>;
        } else {
          return (
            <div>
              <p>{descriptionParagraph.bulletpointsDescription}</p>
              {descriptionParagraph.BulletpointsList.map((bulletpoint) => {
                return <li>{bulletpoint}</li>;
              })}
            </div>
          );
        }
      })}
    </div>
  )
}

<style>
  .description {
    grid-area: description;

    display: flex;
    flex-direction: column;
    gap: 1rem;

    & > p {
      color: var(--text-tertiary);
      line-height: var(--Line-height-Body-Small);
      letter-spacing: 0.01125rem;
    }

    @media (max-width: 1300px) {
      display: none;
    }
  }
</style>
